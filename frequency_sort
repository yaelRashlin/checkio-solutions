def frequency_sort(items):
    di_occurences = {}
    for i in items:
        if not di_occurences.get(i):
            di_occurences[i] = 1
        else:
            di_occurences[i] = di_occurences[i] + 1
            
    p = list(di_occurences.items())
    p.sort(key=lambda x: x[1], reverse = True)
    res = []
    
    for l1 in p:
        for i in range(0, l1[1]):
            res.append(l1[0])
    return res

if __name__ == '__main__':
    print("Example:")
    print(frequency_sort([4, 6, 2, 2, 6, 4, 4, 4]))

    # These "asserts" are used for self-checking and not for an auto-testing
    assert list(frequency_sort([4, 6, 2, 2, 6, 4, 4, 4])) == [4, 4, 4, 4, 6, 6, 2, 2]
    assert list(frequency_sort(['bob', 'bob', 'carl', 'alex', 'bob'])) == ['bob', 'bob', 'bob', 'carl', 'alex']
    assert list(frequency_sort([17, 99, 42])) == [17, 99, 42]
    assert list(frequency_sort([])) == []
    assert list(frequency_sort([1])) == [1]
    print("Coding complete? Click 'Check' to earn cool rewards!")
